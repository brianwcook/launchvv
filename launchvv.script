on open argv	do shell script "logger -s launchvv started"		set debug to false	set log_file to "/tmp/droplet.log"			(*
	first see if there is a CA crt
	need to find out what the RHEV-M server is - parse it out the .vv file. it is in as the following
	URI:http://virtville.usersys.redhat.com:80/ca.crt\n\n

	will call the split function twice, once with the expected beginning sequence and once with the end and should end up with just the hostname of the RHEVM server

	set myArray to my theSplit(myTestString, "URI:http://")
	

	*)	set vvfile to POSIX path of item 1 of argv	set vvcontents to read POSIX file vvfile			set myArray to my theSplit(vvcontents, "URI:http://")	set rhevm to item 1 of my theSplit(item 2 of myArray, ":")		do shell script "logger -s RHEV-M host is " & rhevm		set crtexists to false		--see if there is a ca.crt in /tmp	set msg to false	tell application "Finder" to if exists "/tmp/" & rhevm & ".crt" as POSIX file then set msg to true		--if not download the ca crt	if not msg then		do shell script "logger -s missing CA cert"		set certurl to "http://" & rhevm & "/ca.crt"		do shell script "logger -s CA cert URL is: " & certurl		set curl_command to "curl " & certurl & " -o " & "/tmp/" & rhevm & ".crt"		do shell script curl_command	end if			set the_command to "open -n -a RemoteViewer --args --spice-ca-file=/tmp/" & rhevm & ".crt " & POSIX path of item 1 of argv			if debug then		tell application "Terminal"			try				do shell script "logger -s  ready to execute do script: " & the_command				do script the_command			end try		end tell	else		try			do shell script "logger -s  ready to execute do shell script: " & the_command			do shell script the_command		end try	end if		end openon theSplit(theString, theDelimiter)	-- save delimiters to restore old settings	set oldDelimiters to AppleScript's text item delimiters	-- set delimiters to delimiter to be used	set AppleScript's text item delimiters to theDelimiter	-- create the array	set theArray to every text item of theString	-- restore the old setting	set AppleScript's text item delimiters to oldDelimiters	-- return the result	return theArrayend theSplit